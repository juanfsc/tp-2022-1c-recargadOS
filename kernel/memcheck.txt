==20457== Memcheck, a memory error detector
==20457== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==20457== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==20457== Command: ./bin/kernel.out /home/utnso/git/tp-2022-1c-recargadOS/kernel/config/kernel.cfg
==20457== Parent PID: 20456
==20457== 
==20457== Invalid read of size 8
==20457==    at 0x485E8B9: config_get_string_value (in /usr/lib/libcommons.so)
==20457==    by 0x10B5BF: inicializarVariablesGlobales (inicializacion.c:22)
==20457==    by 0x10B81D: main (main.c:43)
==20457==  Address 0x8 is not stack'd, malloc'd or (recently) free'd
==20457== 
==20457== 
==20457== Process terminating with default action of signal 11 (SIGSEGV)
==20457==  Access not within mapped region at address 0x8
==20457==    at 0x485E8B9: config_get_string_value (in /usr/lib/libcommons.so)
==20457==    by 0x10B5BF: inicializarVariablesGlobales (inicializacion.c:22)
==20457==    by 0x10B81D: main (main.c:43)
==20457==  If you believe this happened as a result of a stack
==20457==  overflow in your program's main thread (unlikely but
==20457==  possible), you can try to increase the size of the
==20457==  main thread stack using the --main-stacksize= flag.
==20457==  The main thread stack size used in this run was 8388608.
==20457== 
==20457== HEAP SUMMARY:
==20457==     in use at exit: 511 bytes in 3 blocks
==20457==   total heap usage: 4 allocs, 1 frees, 983 bytes allocated
==20457== 
==20457== LEAK SUMMARY:
==20457==    definitely lost: 0 bytes in 0 blocks
==20457==    indirectly lost: 0 bytes in 0 blocks
==20457==      possibly lost: 0 bytes in 0 blocks
==20457==    still reachable: 511 bytes in 3 blocks
==20457==         suppressed: 0 bytes in 0 blocks
==20457== Reachable blocks (those to which a pointer was found) are not shown.
==20457== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==20457== 
==20457== For lists of detected and suppressed errors, rerun with: -s
==20457== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
